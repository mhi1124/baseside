<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxfeii.baseside.modules.sys.mapper.RoleMapper">
	
	<sql id="column">sid,roleName,roleKey,status,description,createTime,updateTime</sql>
	
	<resultMap id="roleMap" type="role">
		<id property="sid" column="sid"/>
		<result property="roleName" column="roleName"/>
		<result property="roleKey" column="roleKey"/>
		<result property="status" column="status"/>
		<result property="description" column="description"/>
		<result property="createTime" column="createTime"/>
		<result property="updateTime" column="updateTime"/>
		<collection property="userList" column="sid" ofType="user">
			<id property="sid" column="u_id"/>
			<result property="userName" column="userName"/>
			<result property="accountName" column="accountName"/>
			<result property="password" column="password"/>
			<result property="userStatus" column="userStatus"/>
			<result property="description" column="description"/>
			<result property="creatorName" column="creatorName"/>
			<result property="createTime" column="createTime"/>
			<result property="updateTime" column="updateTime"/>
		</collection>
		<collection property="menuList" column="sid" ofType="menu">
			<id property="sid" column="m_id"/>
			<result property="menuName" column="menuName"/>
			<result property="menuUrl" column="menuUrl"/>
			<result property="menuStatus" column="menuStatus"/>
			<result property="pid" column="pid"/>
			<result property="menuRemark" column="menuRemark"/>
			<result property="menuType" column="menuType"/>
			<result property="icon" column="icon"/>
			<result property="parentPath" column="parentPath"/>
		</collection>
	</resultMap>
	
	<select id="findPage" parameterType="map" resultType="role">
		select 
			<include refid="column"/>
		from sys_role
		<where>
			<trim prefixOverrides="and">
				<if test=" status != null">
					status in 
					<foreach collection="status" item = "s" open="(" separator="," close=")">
				    	#{s}  
				    </foreach> 
				</if>
				<if test=" roleName != null">
					and roleName like concat('%',#{roleName},'%')
				</if>
			</trim>
		</where>
		<if test="pageNo != null and pageSize != null ">
			limit #{pageNo},#{pageSize}
		</if>
	</select>
	
	<select id="getCount" parameterType="map" resultType="Integer">
		select count(1) from sys_role
		<where>
			<trim prefixOverrides="and">
				<if test=" status != null">
					status in 
					<foreach collection="status" item = "s" open="(" separator="," close=")">
				    	#{s}  
				    </foreach> 
				</if>
				<if test=" roleName != null">
					and roleName like concat('%',#{roleName},'%')
				</if>
			</trim>
		</where>
	</select>
	
	<select id="findRoleByParam" parameterType="map" resultMap="roleMap">
		select 
			sr.sid,sr.roleName,sr.roleKey,sr.status,sr.description,sr.createTime,sr.updateTime,
			sm.sid,sm.menuName,sm.menuUrl,sm.menuStatus,sm.pid,sm.menuRemark,sm.menuType,sm.icon,sm.parentPath
		from sys_role sr left join sys_role_menu srm on sr.sid=srm.r_id 
		left join sys_menu sm on srm.m_id = sm.sid
		<where>
			<trim prefixOverrides="and">
				<if test=" status != null">
					sr.status in 
					<foreach collection="status" item = "s" open="(" separator="," close=")">
				    	#{s}  
				    </foreach> 
				</if>
				<if test="sid != null">
					and sr.sid = #{sid}
				</if>
				<if test=" roleName != null">
					and sr.roleName = #{roleName}
				</if>
			</trim>
		</where>
	</select>
	
	<insert id="insert" parameterType="role">
		insert into sys_role ( <include refid="column"/> )
		values (#{sid},#{roleName},#{roleKey},#{status},#{description},#{createTime},#{updateTime})
	</insert>
	
	<update id="update" parameterType="role">
		update sys_role set 
		<trim suffixOverrides=",">
			<if test="roleName != null"> roleName = #{roleName}, </if>
			<if test="roleKey != null"> roleKey = #{roleKey} ,</if>
			<if test="status != null"> status = #{status} ,</if>
			<if test="description != null"> description = #{description} ,</if>
			<if test="updateTime != null"> updateTime = #{updateTime} ,</if>
		</trim>
		where sid = #{sid}
	</update>
	
	<delete id="deleteBatchById" parameterType="list">
		<![CDATA[ 
			delete from sys_role where sid in 
		 ]]>
		 <foreach collection="list" item="sid" open="(" separator="," close=")">
		 	#{sid}
		 </foreach>
	</delete>
	
	<delete id="deleteRoleUser" parameterType="list">
		<![CDATA[ 
			delete from sys_role_user where r_id in 
		 ]]>
		 <foreach collection="list" item="sid" open="(" separator="," close=")">
		 	#{sid}
		 </foreach>
	</delete>
	
	<delete id="deleteRoleMenu" parameterType="list">
		<![CDATA[ 
			delete from sys_role_menu where r_id in 
		 ]]>
		 <foreach collection="list" item="sid" open="(" separator="," close=")">
		 	#{sid}
		 </foreach>
	</delete>
	
	<select id="findRoleUserCount" parameterType="list" resultType="Integer">
		select count(1) from sys_role_user where r_id in
			<foreach collection="list" item="sid" open="(" separator="," close=")">
			 	#{sid}
			 </foreach>
	</select>
	
	<select id="findRoleMenuCount" parameterType="list" resultType="Integer">
		select count(1) from sys_role_menu where r_id in
			<foreach collection="list" item="sid" open="(" separator="," close=")">
			 	#{sid}
			 </foreach>
	</select>
	
	<insert id="addRoleMenuBatch" parameterType="map">
		insert ignore into sys_role_menu (
			r_id,
			m_id
		)   
		values 
		<foreach collection="menuids" item ="mid" separator=",">
			(
				#{rid},
				#{mid}
			)
		</foreach>
	</insert>
	
</mapper>