<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxfeii.baseside.modules.sys.mapper.MenuMapper">
	
	<sql id="column">id,menuName,menuUrl,menuStatus,pid,menuRemark,menuType,icon</sql>
	
	<sql id="menuC">m.id,m.menuName,m.menuUrl,m.menuStatus,m.pid,m.menuRemark,m.menuType,m.icon</sql>
	
	<resultMap id="menuMap" type="com.xxfeii.baseside.modules.sys.entity.Menu">
		<id property="id" column="id"/>
		<result property="menuName" column="menuName"/>
		<result property="menuUrl" column="menuUrl"/>
		<result property="menuStatus" column="menuStatus"/>
		<result property="pid" column="pid"/>
		<result property="menuRemark" column="menuRemark"/>
		<result property="menuType" column="menuType"/>
		<result property="icon" column="icon"/>
	</resultMap>
	
	<insert id="insert" parameterType="com.xxfeii.baseside.modules.sys.entity.Menu">
		insert into sys_menu ( <include refid="column"/> )
		values (#{id},#{menuName},#{menuUrl},#{menuStatus},#{pid},#{menuRemark},#{menuType},#{icon})
	</insert>
	
	<insert id="insertBatch" parameterType="list">
		insert into sys_menu (<include refid="column"/>)
		values 
		<foreach collection="list" item="menu" separator=",">
			(
				#{menu.id},
				#{menu.menuName},
				#{menu.menuUrl},
				#{menu.menuStatus},
				#{menu.pid},
				#{menu.menuRemark},
				#{menu.menuType},
				#{menu.icon}
			)
		</foreach>
	</insert>
	<select id="findPage" parameterType="map" resultMap="menuMap">
		select 
			m1.id,
			m1.menuName,
			m1.menuUrl,
			m1.menuStatus,
			m1.pid,
			m1.menuRemark,
			m1.menuType,
			m1.icon
		from sys_menu m1 left join sys_menu m2 on m1.pid =m2.id 
		<where>
			<if test=" menuStatus != null">
				m1.menuStatus in 
				<foreach collection="menuStatus" item = "status" open="(" separator="," close=")">
			    	#{status}  
			    </foreach> 
			</if>
		</where>
		<if test="pageNo != null and pageSize != null ">
			limit #{pageNo},#{pageSize}
		</if>
	</select>
	
	<select id="getCount" parameterType="map" resultType="Integer">
		select count(1) from sys_menu 
		<where>
			<if test=" menuStatus != null">
				m1.menuStatus in 
				<foreach collection="menuStatus" item = "status" open="(" separator="," close=")">
			    	#{status}  
			    </foreach> 
			</if>
		</where>
	</select>
	
	<delete id="delete" parameterType="String">
		delete from sys_menu where id = #{id}
	</delete>
	
	<delete id="deleteBatchById" parameterType="list">
		<![CDATA[ 
			delete from sys_menu where id in 
		 ]]>
		 <foreach collection="list" item="id" open="(" separator="," close=")">
		 	#{id}
		 </foreach>
	</delete>
	
	<update id="update" parameterType="com.xxfeii.baseside.modules.sys.entity.Menu">
		update sys_menu set 
		<trim suffixOverrides=",">
			<if test="menuName != null"> menuName = #{menuName}, </if>
			<if test="menuUrl != null"> menuUrl = #{menuUrl} ,</if>
			<if test="menuStatus != null"> menuStatus = #{menuStatus} ,</if>
			<if test="pid != null"> pid = #{pid} ,</if>
			<if test="menuRemark != null"> menuRemark = #{menuRemark} ,</if>
			<if test="menuType != null"> menuType = #{menuType} ,</if>
			<if test="icon != null"> icon = #{icon} ,</if>
		</trim>
		where id = #{id}
	</update>
	
	<select id="findMenuByUserId" parameterType="String" resultMap="menuMap">
		SELECT <include refid="menuC"/> 
		FROM sys_menu m, sys_role_menu rm, sys_role r, sys_role_user ru
		WHERE 
			m.menuType != 2
			AND m.id = rm.m_id
			AND rm.r_id = r.id
			AND r.id = ru.r_id
			AND ru.u_id = #{userId}
	</select>
</mapper>